import subprocess
import os
from colorama import Fore, Style
import time
import threading 
import socket
def print_hydra_welcome():
    logo_lines = [
        "                  ‚†Ñ‚†Ñ‚£¥‚£∂‚£§‚°§‚†¶‚£§‚£Ä‚£§‚†Ü‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚£à‚£≠‚£≠‚£ø‚£∂‚£ø‚£¶‚£º‚£Ü‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†â‚†ª‚¢ø‚£ø‚†ø‚£ø‚£ø‚£∂‚£¶‚†§‚†Ñ‚°†‚¢æ‚£ø‚£ø‚°ø‚†ã‚†â‚†â‚†ª‚£ø‚£ø‚°õ‚£¶‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†à‚†Ñ‚†Ñ‚†Ñ‚†à‚¢ø‚£ø‚£ü‚†¶‚†Ñ‚£æ‚£ø‚£ø‚£∑‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ª‚†ø‚¢ø‚£ø‚£ß‚£Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚£∏‚£ø‚£ø‚¢ß‚†Ñ‚¢ª‚†ª‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚†Ñ‚†¢‚£Ä‚°Ä‚†à‚†ô‚†ø‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚¢Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢†‚£ø‚£ø‚£ø‚†à‚†Ñ‚†Ñ‚†°‚†å‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£≥‚£§‚£Ä‚£Ä‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚¢†‚£ß‚£∂‚£•‚°§‚¢Ñ‚†Ñ‚£∏‚£ø‚£ø‚†ò‚†Ñ‚†Ñ‚¢Ä‚£¥‚£ø‚£ø‚°ø‚†õ‚£ø‚£ø‚£ß‚†à‚¢ø‚†ø‚†ü‚†õ‚†ª‚†ø‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚£∞‚£ø‚£ø‚†õ‚†ª‚£ø‚£ø‚°¶‚¢π‚£ø‚£∑‚†Ñ‚†Ñ‚†Ñ‚¢ä‚£ø‚£ø‚°è‚†Ñ‚†Ñ‚¢∏‚£ø‚£ø‚°á‚†Ñ‚¢Ä‚£†‚£Ñ‚£æ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚£†‚£ø‚†ø‚†õ‚†Ñ‚¢Ä‚£ø‚£ø‚£∑‚†ò‚¢ø‚£ø‚£¶‚°Ä‚†Ñ‚¢∏‚¢ø‚£ø‚£ø‚£Ñ‚†Ñ‚£∏‚£ø‚£ø‚°á‚£™‚£ø‚°ø‚†ø‚£ø‚£∑‚°Ñ‚†Ñ",
        "                  ‚†ô‚†É‚†Ñ‚†Ñ‚†Ñ‚£º‚£ø‚°ü‚†å‚†Ñ‚†à‚†ª‚£ø‚£ø‚£¶‚£å‚°á‚†ª‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚†ê‚£ø‚£ø‚°á‚†Ñ‚†õ‚†ª‚¢∑‚£Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢ª‚£ø‚£ø‚£Ñ‚†Ñ‚†Ñ‚†Ñ‚†à‚†ª‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ñ‚†´‚¢ø‚£ø‚°Ü‚†Ñ‚†Ñ‚†Ñ‚†Å",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ª‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢Ä‚£Ä‚£§‚£æ‚°ø‚†É‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢∞‚£∂‚†Ñ‚†Ñ‚£∂‚†Ñ‚¢∂‚£Ü‚¢Ä‚£∂‚†Ç‚£∂‚°∂‚†∂‚£¶‚°Ñ‚¢∞‚£∂‚†∂‚¢∂‚£¶‚†Ñ‚†Ñ‚£¥‚£∂‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢∏‚£ø‚†∂‚†∂‚£ø‚†Ñ‚†à‚¢ª‚£ø‚†Å‚†Ñ‚£ø‚°á‚†Ñ‚¢∏‚£ø‚¢∏‚£ø‚¢∂‚£æ‚†è‚†Ñ‚£∏‚£ü‚£π‚£ß‚†Ñ‚†Ñ‚†Ñ",
        "                  ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†∏‚†ø‚†Ñ‚†Ñ‚†ø‚†Ñ‚†Ñ‚†∏‚†ø‚†Ñ‚†Ñ‚†ø‚†∑‚†∂‚†ø‚†É‚†∏‚†ø‚†Ñ‚†ô‚†∑‚†§‚†ø‚†â‚†â‚†ø‚†Ü‚†Ñ‚†Ñ"
    ]

    print(Fore.RED + Style.BRIGHT)
    for line in logo_lines:
        print(line)
        time.sleep(0.1)  # Delays for 0.1 seconds between each line to create a progressive display effect
    print(Style.RESET_ALL)
    print(f"{Fore.RED}Bienvenue sur Hydra{Style.RESET_ALL}")


def run_hydra(target, userlist_path, wordlist_path, port, service):
    # Construction de la commande Hydra
    command = [
        "hydra",
        "-L", userlist_path,  # Utilise un fichier pour les noms d'utilisateur
        "-P", wordlist_path,  # Utilise un fichier pour les mots de passe
        "-s", str(port),  # Sp√©cifie le port si n√©cessaire, utile pour des services non standards
        "-t", "4",
        "-I",
        service + "://" + target  # Sp√©cifie le service et la cible
    ]

    try:
        # Ex√©cution de la commande Hydra
        result = subprocess.run(command, text=True, capture_output=True, check=True)
        print("Hydra a d√©marr√© avec succ√®s. Voici la sortie :")
        print(result.stdout)  # Affiche la sortie standard
        if result.stderr:
            print("Erreur de sortie standard :")
            print(result.stderr)  # Affiche les erreurs si pr√©sentes
    except subprocess.CalledProcessError as e:
        # Affiche la sortie d'erreur si Hydra √©choue
        print(f"Erreur lors de l'ex√©cution de Hydra: {e.stderr}")
    except Exception as e:
        print(f"Erreur inattendue: {str(e)}")

    return result.stdout if result.stdout else "Aucune sortie significative de Hydra."
# Variable globale pour contr√¥ler l'√©tat de l'animation
animation_running = False

def animate():
    symbols = ["üíÄ", "üïµÔ∏è‚Äç‚ôÇÔ∏è", "üíÄ", "üïµÔ∏è‚Äç‚ôÇÔ∏è"]
    idx = 0
    while animation_running:
        print("\rD√©marrage de Hydra... " + symbols[idx % len(symbols)], end="")
        idx += 1
        time.sleep(0.5)  # Ajustement de la vitesse de l'animation

def start_animation():
    global animation_running
    animation_running = True
    thread = threading.Thread(target=animate)
    thread.start()
    return thread

def stop_animation(thread):
    global animation_running
    animation_running = False
    thread.join()

# Exemple d'utilisation de la fonction
# run_hydra("192.168.2.6", "usernames.txt", "rockyou.txt", 22, "ssh")
